plugins {
    id 'fabric-loom' version '0.2.2-SNAPSHOT'
    id 'org.jetbrains.kotlin.jvm' version '1.3.30'
    id 'maven-publish'
    id 'com.jfrog.artifactory' version '4.9.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = "io.github.juuxel"
archivesBaseName = "Polyester"
version = project.mod_version + ((project.snapshot == "true") ? "-SNAPSHOT" : "")

repositories {
    mavenCentral()
}

minecraft {
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}"
    modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modCompile "net.fabricmc:fabric:${project.fabric_version}"
    modCompile "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"
    compileOnly "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

processResources {
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

if (rootProject.file("private.gradle").exists()) {
    apply from: "private.gradle"
}

// Modified from the Cotton buildscript (https://github.com/CottonMC/cotton)
publishing {
    publications {
        maven(MavenPublication) {
            artifactId = archivesBaseName.toLowerCase(Locale.ROOT)

            artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar") { //release jar - file location not provided anywhere in loom
                classifier null
                builtBy remapJar
            }

            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }
}

artifactory {
    if (project.hasProperty("artifactoryUsername")) {
        contextUrl = 'http://server.bbkr.space:8081/artifactory/'
        publish {
            repository {
                if (version.contains("SNAPSHOT")) {
                    repoKey = "libs-snapshot"
                } else {
                    repoKey = "libs-release"
                }
                username = artifactoryUsername
                password = artifactoryPassword
            }
            defaults {
                publications('maven')

                publishArtifacts = true
                publishPom = true
            }
        }
    } else {
        println "Cannot configure artifactory; please define ext.artifactoryUsername and ext.artifactoryPassword before running artifactoryPublish"
    }
}
